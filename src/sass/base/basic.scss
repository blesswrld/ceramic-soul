// Импорт файла переменных
// @use "/src/sass/base/variables.scss" as *;

// Импорт файла для расчета px в единицы rem
// @use "/src/sass/pxtorem.scss" as *;

@use "/src/sass/base/variables.scss" as *;

h1,
h2,
h3,
h4,
h5,
figure,
p,
ol,
ul {
    margin: 0;
}

ol[role="list"],
ul[role="list"] {
    list-style: none;
    padding-inline: 0;
}

h1,
h2,
h3,
h4,
h5 {
    font-size: inherit;
    font-weight: inherit;
}

img {
    display: block;
    max-inline-size: 100%;
}

// :root {
// 	--light-color: #f5f5f7;
// 	--dark-color: #221f20;
// 	--container-padding-inline: 13%;
// 	--footer-padding-inline: 10%;
// 	@media screen and (max-width: 768px) {
// 		--container-padding-inline: 6%;
// 		--footer-padding-inline: 6%;
// 	}
// 	@media screen and (max-width: 576px) {
// 		--container-padding-inline: 15px;
// 		--footer-padding-inline: 15px;
// 	}
// }

body {
    background-color: $light;
}

html {
    font-family: "Barlow", sans-serif;
    scroll-behavior: smooth;
}

.container {
    width: 100%;
    padding: 0 10px;
}

// span {
//     // применение функции расчета px в rem (обращаемся к файлу функции и записываем количество px в виде аргумента)
//     // font-size: pxtorem.rem(32);
//     // или по названию функции без обращения
//     // font-size: rem(32);

//     // Эти свойства автоматически переводятся в единицу rem с помощью postcss-pxtorem npm пакета (смотреть зависимость в package.json)
//     font-size: 32px;
//     width: 400px;
//     height: 300px;

//     // применение переменной (обращаемся к файлу переменных и вытаскиваем переменную)
//     // color: variables.$ui-error;
//     // или по названию
//     color: $ui-error;
// }
